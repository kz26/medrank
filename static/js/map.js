// Generated by CoffeeScript 1.9.2
var initMap, isExactLocation, markers, place_cache;

markers = [];

place_cache = null;

isExactLocation = function(place) {
  var addr_types;
  addr_types = ['street_address', 'intersection', 'premise', 'subpremise', 'natural_feature', 'airport', 'park', 'point_of_interest'];
  return addr_types.some(function(c, i, a) {
    return place.types.indexOf(c) !== -1;
  });
};

initMap = function() {
  var attachInfoWindow, autocomplete, map, plotNearby;
  map = new google.maps.Map($('#map')[0], {
    center: {
      lat: 41.618460,
      lng: -83.617682
    },
    zoom: 10,
    componentRestrictions: {
      country: 'us'
    }
  });
  autocomplete = new google.maps.places.Autocomplete($('#search-box')[0]);
  autocomplete.addListener('place_changed', function() {
    var p;
    p = autocomplete.getPlace();
    if (isExactLocation(p)) {
      map.setZoom(14);
    } else {
      map.setZoom(10);
    }
    plotNearby(p);
    return place_cache = p;
  });
  plotNearby = function(place) {
    var j, len, loc, m;
    for (j = 0, len = markers.length; j < len; j++) {
      m = markers[j];
      m.setMap(null);
    }
    markers = [];
    loc = place.geometry.location;
    map.setCenter(loc);
    return $.get('/nearby', {
      lng: loc.lng(),
      lat: loc.lat(),
      radius: $('#radius-select').val()
    }, function(data) {
      var color, iwc, k, la, len1, marker, results, x;
      results = [];
      for (k = 0, len1 = data.length; k < len1; k++) {
        x = data[k];
        if (x.score < 60) {
          color = 'red';
        } else if (x.score < 80) {
          color = 'yellow';
        } else {
          color = 'green';
        }
        marker = new google.maps.Marker({
          position: {
            lng: x.geo.coordinates[0],
            lat: x.geo.coordinates[1]
          },
          icon: "http://maps.google.com/mapfiles/ms/icons/" + color + "-dot.png",
          map: map
        });
        la = JSON.parse(x.location[0]);
        iwc = "<p><b>" + x['hospital name'] + "</b></p> <ul> <li>Score: " + (+x.score.toFixed(2)) + "</li> <li>Rank: " + x.rank + " / 4300</li> <li>" + la.address + ", " + la.city + ", " + la.state + " " + la.zip + "</li> <li>Phone: <a href=\"tel:" + x['phone number'][0] + "\">" + x['phone number'][0] + "</a></li> </ul>";
        markers.push(marker);
        results.push(attachInfoWindow(marker, iwc));
      }
      return results;
    });
  };
  attachInfoWindow = function(marker, content) {
    return marker.addListener('click', function() {
      var iw;
      iw = new google.maps.InfoWindow({
        content: content
      });
      return iw.open(map, marker);
    });
  };
  return $('#radius-select').change(function() {
    if (place_cache != null) {
      return plotNearby(place_cache);
    }
  });
};
